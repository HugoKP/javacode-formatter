
Processando comentarios... 


Expressoes regulares:

([/][*](.|\n)*?[*][/])|(\/\/.*?\n)
(\b[_a-z$][\w$]*)(\s|\n)*([(])
"(.|\n)*?"
'.'
\b([_A-Z][_A-Z0-9]*?)\b
\b[A-Z][\w$]*?[a-z]+[\w$]*\b
\b(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|null|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\b

=====CONTEUDO ORIGINAL COM COMENTARIOS SUBSTITUIDOS=====

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.Global.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.Global.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    private static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    private static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    private final StringBuffer originalHtmlContent;
    
    /*20*/
    private final int buffer;
   
    /*19*/
    private final File inputFile;
    private final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        String absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        String line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.close();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static String utf8EmojiToFilename(final String utf8Emoji)
    {
        StringBuilder filename = new StringBuilder(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                String.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    private String getNewTag(final String oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            String utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    private HashMap&lt;String, String&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        String newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;String, String&gt; tagMap = getMap();
        
        for(String oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.close();
        
    }/*13*/    
}/*10*/
----------------------------------------------------

Pesquisando xt3wquy_char

'＂'                                                                              | <span CLASS="xt3wquy_char">'＂'</span>

Pesquisando xt3wquy_literal

"alt\\s*=\\s*\＂.+?\＂"                                                            | <span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>
"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"            | <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
".html"                                                                          | <span CLASS="xt3wquy_literal">".html"</span>
""                                                                               | <span CLASS="xt3wquy_literal">""</span>
"\n"                                                                             | <span CLASS="xt3wquy_literal">"\n"</span>
"/"                                                                              | <span CLASS="xt3wquy_literal">"/"</span>
"%x"                                                                             | <span CLASS="xt3wquy_literal">"%x"</span>
"-%x"                                                                            | <span CLASS="xt3wquy_literal">"-%x"</span>
".png"                                                                           | <span CLASS="xt3wquy_literal">".png"</span>
"&lt;img src=\＂"                                                                 | <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span>
"\＂ alt=\＂"                                                                      | <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span>
"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"                                          | <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>

Pesquisando xt3wquy_reserved

package                                                                          | <span CLASS="xt3wquy_reserved">package</span>
import                                                                           | <span CLASS="xt3wquy_reserved">import</span>
static                                                                           | <span CLASS="xt3wquy_reserved">static</span>
public                                                                           | <span CLASS="xt3wquy_reserved">public</span>
final                                                                            | <span CLASS="xt3wquy_reserved">final</span>
class                                                                            | <span CLASS="xt3wquy_reserved">class</span>
private                                                                          | <span CLASS="xt3wquy_reserved">private</span>
int                                                                              | <span CLASS="xt3wquy_reserved">int</span>
new                                                                              | <span CLASS="xt3wquy_reserved">new</span>
void                                                                             | <span CLASS="xt3wquy_reserved">void</span>
throws                                                                           | <span CLASS="xt3wquy_reserved">throws</span>
while                                                                            | <span CLASS="xt3wquy_reserved">while</span>
null                                                                             | <span CLASS="xt3wquy_reserved">null</span>
for                                                                              | <span CLASS="xt3wquy_reserved">for</span>
char                                                                             | <span CLASS="xt3wquy_reserved">char</span>
if                                                                               | <span CLASS="xt3wquy_reserved">if</span>
continue                                                                         | <span CLASS="xt3wquy_reserved">continue</span>
return                                                                           | <span CLASS="xt3wquy_reserved">return</span>
else                                                                             | <span CLASS="xt3wquy_reserved">else</span>

Pesquisando xt3wquy_function

compile                                                                          | <span CLASS="xt3wquy_function">compile</span>
getAbsolutePath                                                                  | <span CLASS="xt3wquy_function">getAbsolutePath</span>
length                                                                           | <span CLASS="xt3wquy_function">length</span>
replace                                                                          | <span CLASS="xt3wquy_function">replace</span>
readFile                                                                         | <span CLASS="xt3wquy_function">readFile</span>
readLine                                                                         | <span CLASS="xt3wquy_function">readLine</span>
append                                                                           | <span CLASS="xt3wquy_function">append</span>
close                                                                            | <span CLASS="xt3wquy_function">close</span>
utf8EmojiToFilename                                                              | <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>
charAt                                                                           | <span CLASS="xt3wquy_function">charAt</span>
isLowSurrogate                                                                   | <span CLASS="xt3wquy_function">isLowSurrogate</span>
format                                                                           | <span CLASS="xt3wquy_function">format</span>
codePointAt                                                                      | <span CLASS="xt3wquy_function">codePointAt</span>
toString                                                                         | <span CLASS="xt3wquy_function">toString</span>
getNewTag                                                                        | <span CLASS="xt3wquy_function">getNewTag</span>
matcher                                                                          | <span CLASS="xt3wquy_function">matcher</span>
find                                                                             | <span CLASS="xt3wquy_function">find</span>
group                                                                            | <span CLASS="xt3wquy_function">group</span>
substring                                                                        | <span CLASS="xt3wquy_function">substring</span>
indexOf                                                                          | <span CLASS="xt3wquy_function">indexOf</span>
trim                                                                             | <span CLASS="xt3wquy_function">trim</span>
getMap                                                                           | <span CLASS="xt3wquy_function">getMap</span>
put                                                                              | <span CLASS="xt3wquy_function">put</span>
createNewFile                                                                    | <span CLASS="xt3wquy_function">createNewFile</span>
keySet                                                                           | <span CLASS="xt3wquy_function">keySet</span>
get                                                                              | <span CLASS="xt3wquy_function">get</span>
write                                                                            | <span CLASS="xt3wquy_function">write</span>

Pesquisando xt3wquy_const

EMOJIS_DIRNAME                                                                   | <span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>
SHOW_EMOJIS                                                                      | <span CLASS="xt3wquy_const">SHOW_EMOJIS</span>
ALT_ATTR_PATTERN                                                                 | <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>
EMOJI_TAG_PATTERN                                                                | <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span>
UTF_8                                                                            | <span CLASS="xt3wquy_const">UTF_8</span>

Pesquisando xt3wquy_class

Global                                                                           | <span CLASS="xt3wquy_class">Global</span>
BufferedReader                                                                   | <span CLASS="xt3wquy_class">BufferedReader</span>
BufferedWriter                                                                   | <span CLASS="xt3wquy_class">BufferedWriter</span>
File                                                                             | <span CLASS="xt3wquy_class">File</span>
FileReader                                                                       | <span CLASS="xt3wquy_class">FileReader</span>
FileWriter                                                                       | <span CLASS="xt3wquy_class">FileWriter</span>
IOException                                                                      | <span CLASS="xt3wquy_class">IOException</span>
StandardCharsets                                                                 | <span CLASS="xt3wquy_class">StandardCharsets</span>
HashMap                                                                          | <span CLASS="xt3wquy_class">HashMap</span>
Matcher                                                                          | <span CLASS="xt3wquy_class">Matcher</span>
Pattern                                                                          | <span CLASS="xt3wquy_class">Pattern</span>
WhatsAppEditor                                                                   | <span CLASS="xt3wquy_class">WhatsAppEditor</span>
StringBuffer                                                                     | <span CLASS="xt3wquy_class">StringBuffer</span>
String                                                                           | <span CLASS="xt3wquy_class">String</span>
StringBuilder                                                                    | <span CLASS="xt3wquy_class">StringBuilder</span>
Character                                                                        | <span CLASS="xt3wquy_class">Character</span>

[Editando o arquivo...]

Editando String
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.Global.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.Global.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    private static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    private static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    private final StringBuffer originalHtmlContent;
    
    /*20*/
    private final int buffer;
   
    /*19*/
    private final File inputFile;
    private final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.close();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> utf8EmojiToFilename(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        StringBuilder filename = new StringBuilder(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    private <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    private HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.close();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando close
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.Global.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.Global.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    private static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    private static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    private final StringBuffer originalHtmlContent;
    
    /*20*/
    private final int buffer;
   
    /*19*/
    private final File inputFile;
    private final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> utf8EmojiToFilename(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        StringBuilder filename = new StringBuilder(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    private <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    private HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando Global
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    private static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    private static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    private final StringBuffer originalHtmlContent;
    
    /*20*/
    private final int buffer;
   
    /*19*/
    private final File inputFile;
    private final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> utf8EmojiToFilename(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        StringBuilder filename = new StringBuilder(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    private <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    private HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando private
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> utf8EmojiToFilename(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        StringBuilder filename = new StringBuilder(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando StringBuilder
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> utf8EmojiToFilename(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = new <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                utf8EmojiToFilename(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando utf8EmojiToFilename
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = new <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.charAt(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando charAt
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = new <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.write(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando write
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        BufferedReader htmlFile = 
            new BufferedReader
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = new <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando BufferedReader
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = new StringBuffer(buffer / 2);
        
        outputFile = 
            new File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            new <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                new FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = new <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = new HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            new BufferedWriter
            (
                new FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando new
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public void readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public void createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando void
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final File inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final File outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final File file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> File
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando File
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.substring
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando substring
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.keySet())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando keySet
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.getAbsolutePath();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando getAbsolutePath
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(".html","") + 
                    SHOW_EMOJIS +
                    ".html"
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando ".html"
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                "\＂ alt=\＂" +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "\＂ alt=\＂"
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> getNewTag(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), getNewTag(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando getNewTag
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final StringBuffer originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> StringBuffer(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando StringBuffer
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.compile("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.compile
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando compile
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) continue;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando continue
-------------------------------------------------------

package br.com.hkp.showemojis;

import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
import static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
import java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
import java.io.BufferedWriter;
import java.io.<span CLASS="xt3wquy_class">File</span>;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando import
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.BufferedWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class WhatsAppEditor
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public WhatsAppEditor(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando WhatsAppEditor
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.BufferedWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.put(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando put
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.BufferedWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher matcher = ALT_ATTR_PATTERN.matcher(oldTag);
        
        if (matcher.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = matcher.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher matcher = EMOJI_TAG_PATTERN.matcher(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (matcher.find())
            map.<span CLASS="xt3wquy_function">put</span>(matcher.group(), <span CLASS="xt3wquy_function">getNewTag</span>(matcher.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando matcher
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.BufferedWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        BufferedWriter htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> BufferedWriter
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando BufferedWriter
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.UTF_8), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando UTF_8
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            char c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando char
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append("\n");
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "\n"
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.replace(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.replace(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando replace
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.group();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.group(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.group()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando group
-------------------------------------------------------

package br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando package
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.format
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando format
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; getMap() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = getMap();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando getMap
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf('＂') + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando '＂'
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).trim();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando trim
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,"") + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando ""
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Matcher;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        Matcher <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando Matcher
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;";
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> readFile() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando readFile
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.toString();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.toString();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando toString
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : "-%x", 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "-%x"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> static br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> static final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public static <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando static
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public final class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> final Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> final Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> final int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> final <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(final <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(final <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(final <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando final
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        for (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        for(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando for
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> class <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando class
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.length();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.length(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.length() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando length
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.append(line).append(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.append(EMOJIS_DIRNAME).append("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.append
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.append(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando append
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(EMOJIS_DIRNAME).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.codePointAt(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando codePointAt
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(EMOJIS_DIRNAME).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        else
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando else
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.EMOJIS_DIRNAME;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(EMOJIS_DIRNAME).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando EMOJIS_DIRNAME
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            if ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        if (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando if
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.SHOW_EMOJIS;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    SHOW_EMOJIS +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando SHOW_EMOJIS
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>("/");
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "/"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> createNewFile() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando createNewFile
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        return filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            return 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            return null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        return map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando return
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.HashMap;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> HashMap&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        HashMap&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando HashMap
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        while ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        while (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando while
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.find()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.find())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando find
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.indexOf(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando indexOf
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(".png");
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando ".png"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() throws IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() throws IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando throws
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != null)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> null;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando null
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileWriter;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileWriter(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando FileWriter
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern ALT_ATTR_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = ALT_ATTR_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando ALT_ATTR_PATTERN
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? "%x" : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "%x"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.IOException;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> IOException
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando IOException
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.isLowSurrogate(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando isLowSurrogate
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                "&lt;img src=\＂" + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "&lt;img src=\＂"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.StandardCharsets;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, StandardCharsets.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando StandardCharsets
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.FileReader;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> FileReader(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando FileReader
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>("alt\\s*=\\s*\＂.+?\＂");
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando "alt\\s*=\\s*\＂.+?\＂"
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.readLine()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando readLine
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.get(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando get
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.Pattern;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> Pattern EMOJI_TAG_PATTERN = 
        Pattern.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando Pattern
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Pattern</span>;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> EMOJI_TAG_PATTERN = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (Character.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  Character.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando Character
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Pattern</span>;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> EMOJI_TAG_PATTERN = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (<span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  <span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = EMOJI_TAG_PATTERN.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando EMOJI_TAG_PATTERN
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Pattern</span>;



/*2*/
public <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    public <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    public <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (<span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  <span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    public <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando public
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Pattern</span>;



/*2*/
<span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> int buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (int)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (int position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (<span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  <span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------

Editando int
-------------------------------------------------------

<span CLASS="xt3wquy_reserved">package</span> br.com.hkp.showemojis;

<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>;
<span CLASS="xt3wquy_reserved">import</span> <span CLASS="xt3wquy_reserved">static</span> br.com.hkp.showemojis.global.<span CLASS="xt3wquy_class">Global</span>.<span CLASS="xt3wquy_const">SHOW_EMOJIS</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">BufferedWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">File</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileReader</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">FileWriter</span>;
<span CLASS="xt3wquy_reserved">import</span> java.io.<span CLASS="xt3wquy_class">IOException</span>;
<span CLASS="xt3wquy_reserved">import</span> java.nio.charset.<span CLASS="xt3wquy_class">StandardCharsets</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.<span CLASS="xt3wquy_class">HashMap</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Matcher</span>;
<span CLASS="xt3wquy_reserved">import</span> java.util.regex.<span CLASS="xt3wquy_class">Pattern</span>;



/*2*/
<span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">class</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>
{
    /*17*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>(<span CLASS="xt3wquy_literal">"alt\\s*=\\s*\＂.+?\＂"</span>);
    
    /*7*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">Pattern</span> <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span> = 
        <span CLASS="xt3wquy_class">Pattern</span>.<span CLASS="xt3wquy_function">compile</span>
        (
            <span CLASS="xt3wquy_literal">"&lt;img src=\＂d5fceb6532643d0d84ffe09c40c481ecdf59e15a\\.gif.+?&gt;"</span>
        );
    
    /*16*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">StringBuffer</span> originalHtmlContent;
    
    /*20*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_reserved">int</span> buffer;
   
    /*19*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> inputFile;
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> outputFile;
    
    /*9*/
    /*12*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_class">WhatsAppEditor</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">File</span> file)
    {
        inputFile = file;
        
        <span CLASS="xt3wquy_class">String</span> absoluteFileName = inputFile.<span CLASS="xt3wquy_function">getAbsolutePath</span>();
        
        buffer = (<span CLASS="xt3wquy_reserved">int</span>)inputFile.<span CLASS="xt3wquy_function">length</span>();
        
        originalHtmlContent = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuffer</span>(buffer / 2);
        
        outputFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">File</span>
                (
                    absoluteFileName.<span CLASS="xt3wquy_function">replace</span>(<span CLASS="xt3wquy_literal">".html"</span>,<span CLASS="xt3wquy_literal">""</span>) + 
                    <span CLASS="xt3wquy_const">SHOW_EMOJIS</span> +
                    <span CLASS="xt3wquy_literal">".html"</span>
                );
    }/*4*/    
    /*21*/
    /*25*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">readFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
           
        <span CLASS="xt3wquy_class">BufferedReader</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedReader</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileReader</span>(inputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> line;
        
        <span CLASS="xt3wquy_reserved">while</span> ((line = htmlFile.<span CLASS="xt3wquy_function">readLine</span>()) != <span CLASS="xt3wquy_reserved">null</span>)
            originalHtmlContent.<span CLASS="xt3wquy_function">append</span>(line).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"\n"</span>);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*23*/        
    /*18*/
    /*5*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">static</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> utf8Emoji)
    {
        <span CLASS="xt3wquy_class">StringBuilder</span> filename = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">StringBuilder</span>(64);
        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_const">EMOJIS_DIRNAME</span>).<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">"/"</span>);
        
        /*15*/        
        <span CLASS="xt3wquy_reserved">for</span> (<span CLASS="xt3wquy_reserved">int</span> position = 0; position &lt; utf8Emoji.<span CLASS="xt3wquy_function">length</span>(); position++)
        {
            <span CLASS="xt3wquy_reserved">char</span> c = utf8Emoji.<span CLASS="xt3wquy_function">charAt</span>(position);
            
            /*22*/
            <span CLASS="xt3wquy_reserved">if</span> ((c == '\ufe0f') || (<span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">isLowSurrogate</span>(c))) <span CLASS="xt3wquy_reserved">continue</span>;
                        
            filename.<span CLASS="xt3wquy_function">append</span>
            (
                <span CLASS="xt3wquy_class">String</span>.<span CLASS="xt3wquy_function">format</span>
                (
                  position == 0 ? <span CLASS="xt3wquy_literal">"%x"</span> : <span CLASS="xt3wquy_literal">"-%x"</span>, 
                  <span CLASS="xt3wquy_class">Character</span>.<span CLASS="xt3wquy_function">codePointAt</span>(utf8Emoji, position)
                )
            );
            
        }/*6*/        
        filename.<span CLASS="xt3wquy_function">append</span>(<span CLASS="xt3wquy_literal">".png"</span>);
        
        <span CLASS="xt3wquy_reserved">return</span> filename.<span CLASS="xt3wquy_function">toString</span>();
        
    }/*8*/    
    /*1*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">String</span> <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_reserved">final</span> <span CLASS="xt3wquy_class">String</span> oldTag)
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">ALT_ATTR_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(oldTag);
        
        <span CLASS="xt3wquy_reserved">if</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>()) 
        {
            <span CLASS="xt3wquy_class">String</span> utf8Emoji = <span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>();
            
            utf8Emoji = utf8Emoji.<span CLASS="xt3wquy_function">substring</span>
                        (
                            utf8Emoji.<span CLASS="xt3wquy_function">indexOf</span>(<span CLASS="xt3wquy_char">'＂'</span>) + 1, utf8Emoji.<span CLASS="xt3wquy_function">length</span>() - 1
                        ).<span CLASS="xt3wquy_function">trim</span>();
            
            <span CLASS="xt3wquy_reserved">return</span> 
                <span CLASS="xt3wquy_literal">"&lt;img src=\＂"</span> + 
                <span CLASS="xt3wquy_function">utf8EmojiToFilename</span>(utf8Emoji) +
                <span CLASS="xt3wquy_literal">"\＂ alt=\＂"</span> +
                utf8Emoji +
                <span CLASS="xt3wquy_literal">"\＂ width=\＂20px\＂ height=\＂20px\＂&gt;"</span>;
        } 
        <span CLASS="xt3wquy_reserved">else</span>
            <span CLASS="xt3wquy_reserved">return</span> <span CLASS="xt3wquy_reserved">null</span>;
  
    }/*11*/    
    /*24*/
    <span CLASS="xt3wquy_reserved">private</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; <span CLASS="xt3wquy_function">getMap</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">Matcher</span> <span CLASS="xt3wquy_function">matcher</span> = <span CLASS="xt3wquy_const">EMOJI_TAG_PATTERN</span>.<span CLASS="xt3wquy_function">matcher</span>(originalHtmlContent);
              
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; map = <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">HashMap</span>&lt;&gt;();
        
        <span CLASS="xt3wquy_reserved">while</span> (<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">find</span>())
            map.<span CLASS="xt3wquy_function">put</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>(), <span CLASS="xt3wquy_function">getNewTag</span>(<span CLASS="xt3wquy_function">matcher</span>.<span CLASS="xt3wquy_function">group</span>()));
       
        <span CLASS="xt3wquy_reserved">return</span> map;
   
    }/*14*/      
    /*3*/
    /*0*/
    <span CLASS="xt3wquy_reserved">public</span> <span CLASS="xt3wquy_reserved">void</span> <span CLASS="xt3wquy_function">createNewFile</span>() <span CLASS="xt3wquy_reserved">throws</span> <span CLASS="xt3wquy_class">IOException</span>
    {
        <span CLASS="xt3wquy_class">BufferedWriter</span> htmlFile = 
            <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">BufferedWriter</span>
            (
                <span CLASS="xt3wquy_reserved">new</span> <span CLASS="xt3wquy_class">FileWriter</span>(outputFile, <span CLASS="xt3wquy_class">StandardCharsets</span>.<span CLASS="xt3wquy_const">UTF_8</span>), buffer
            );
        
        <span CLASS="xt3wquy_class">String</span> newHtmlContent = originalHtmlContent.<span CLASS="xt3wquy_function">toString</span>();
        
        <span CLASS="xt3wquy_class">HashMap</span>&lt;<span CLASS="xt3wquy_class">String</span>, <span CLASS="xt3wquy_class">String</span>&gt; tagMap = <span CLASS="xt3wquy_function">getMap</span>();
        
        <span CLASS="xt3wquy_reserved">for</span>(<span CLASS="xt3wquy_class">String</span> oldTag: tagMap.<span CLASS="xt3wquy_function">keySet</span>())
            newHtmlContent = newHtmlContent.<span CLASS="xt3wquy_function">replace</span>(oldTag, tagMap.<span CLASS="xt3wquy_function">get</span>(oldTag));
       
        htmlFile.<span CLASS="xt3wquy_function">write</span>(newHtmlContent);
        
        htmlFile.<span CLASS="xt3wquy_function">close</span>();
        
    }/*13*/    
}/*10*/
</code></pre>
<div CLASS="linenumber">
000</br>001</br>002</br>003</br>004</br>005</br>006</br>007</br>008</br>009</br>010</br>011</br>012</br>013</br>014</br>015</br>016</br>017</br>018</br>019</br>020</br>021</br>022</br>023</br>024</br>025</br>026</br>027</br>028</br>029</br>030</br>031</br>032</br>033</br>034</br>035</br>036</br>037</br>038</br>039</br>040</br>041</br>042</br>043</br>044</br>045</br>046</br>047</br>048</br>049</br>050</br>051</br>052</br>053</br>054</br>055</br>056</br>057</br>058</br>059</br>060</br>061</br>062</br>063</br>064</br>065</br>066</br>067</br>068</br>069</br>070</br>071</br>072</br>073</br>074</br>075</br>076</br>077</br>078</br>079</br>080</br>081</br>082</br>083</br>084</br>085</br>086</br>087</br>088</br>089</br>090</br>091</br>092</br>093</br>094</br>095</br>096</br>097</br>098</br>099</br>100</br>101</br>102</br>103</br>104</br>105</br>106</br>107</br>108</br>109</br>110</br>111</br>112</br>113</br>114</br>115</br>116</br>117</br>118</br>119</br>120</br>121</br>122</br>123</br>124</br>125</br>126</br>127</br>128</br>129</br>130</br>131</br>132</br>133</br>134</br>135</br>136</br>137</br>138</br>139</br>140</br>141</br>142</br>143</br>144</br>145</br>146</br>147</br>148</br>149</br>150</br>151</br>152</br>153</br>154</br>155</br>156</br>157</br>158</br>159</br>160</br>161</br>162</br>163</br>164</br>165</br>166</br>167</br>168</br>169</br>170</br>171</br>172</br>173</br>174</br>175</br>176</br>177</br>178</br>179</br>180</br>181</br>182</br>183</br>184</br>185</br>186</br>187</br>188</br>189</br>190</br>191</br>192</br>193</br>194</br>195</br>196</br>197</br>198</br>199</br>200</br>201</br>202</br>203</br>204</br>205</br>206</br>207</br>208</br>209</br>210</br>211</br>212</br>213</br>214</br>215</br>216</br>217</br>218</br>219</br>220</br>221</br>222</br>223</br>224</br>225</br>226</br>227</br>228</br>229</br>230</br>231</br>232</br>233</br>234</br>235</br>236</br>237</br>238</br>239</br>240</br>241</br>242</br>243</br>244</br>245</br>
</div></div>

-------------------------------------------------------
